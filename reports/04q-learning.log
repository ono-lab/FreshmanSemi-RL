Traceback (most recent call last):
  File "/home/hisaki/workspace/ono-lab/rl-semi/.venv/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/home/hisaki/workspace/ono-lab/rl-semi/.venv/lib/python3.8/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/home/hisaki/workspace/ono-lab/rl-semi/.venv/lib/python3.8/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/home/hisaki/workspace/ono-lab/rl-semi/.venv/lib/python3.8/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/usr/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/home/hisaki/workspace/ono-lab/rl-semi/.venv/lib/python3.8/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/home/hisaki/workspace/ono-lab/rl-semi/.venv/lib/python3.8/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/hisaki/workspace/ono-lab/rl-semi/.venv/lib/python3.8/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
%matplotlib inline
import matplotlib.pyplot as plt

performance_log = []

state = env.reset()

for _ in range(5000):
    action = policy_eps_greedy(state, q, EPSILON)
    next_state, reward, done, _ = env.step(action)
    n[state, action] += 1
    alpha = 1.0 / n[state, action]  # ã‚¹ãƒ†ãƒƒãƒ—ã‚µã‚¤ã‚º
    q[state, action] = q[state, action] + alpha * (
        reward + GAMMA * (1 - done) * np.max(q[next_state, :]) - q[state, action]
    )

    if step % 100 == 0:
        performance_log.append(check_performance(env, q))

    if done:
        state = env.reset()
    else:
        state = next_state

print(q)

plt.plot(performance_log)
plt.show()

------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mNameError[0m                                 Traceback (most recent call last)
Input [0;32mIn [5][0m, in [0;36m<cell line: 8>[0;34m()[0m
[1;32m     12[0m alpha [38;5;241m=[39m [38;5;241m1.0[39m [38;5;241m/[39m n[state, action]  [38;5;66;03m# ã‚¹ãƒ†ãƒƒãƒ—ã‚µã‚¤ã‚º[39;00m
[1;32m     13[0m q[state, action] [38;5;241m=[39m q[state, action] [38;5;241m+[39m alpha [38;5;241m*[39m (
[1;32m     14[0m     reward [38;5;241m+[39m GAMMA [38;5;241m*[39m ([38;5;241m1[39m [38;5;241m-[39m done) [38;5;241m*[39m np[38;5;241m.[39mmax(q[next_state, :]) [38;5;241m-[39m q[state, action]
[1;32m     15[0m )
[0;32m---> 17[0m [38;5;28;01mif[39;00m [43mstep[49m [38;5;241m%[39m [38;5;241m100[39m [38;5;241m==[39m [38;5;241m0[39m:
[1;32m     18[0m     performance_log[38;5;241m.[39mappend(check_performance(env, q))
[1;32m     20[0m [38;5;28;01mif[39;00m done:

[0;31mNameError[0m: name 'step' is not defined
NameError: name 'step' is not defined

